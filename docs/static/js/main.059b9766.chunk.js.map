{"version":3,"sources":["helpers/GetImg.js","compnents.js","Hooks/useFetchImg.js","index.js"],"names":["getImg","NomCad","a","url","encodeURI","fetch","rspuesta","json","data","map","v","id","Title","title","Url","images","downsized_medium","GifExperApp","Lista","useState","Cate","setCate","setCategories","className","category","AddCategory","value","setValue","resert","onSubmit","e","preventDefault","trim","length","type","onChange","target","placeholder","Categry","nom","loading","State","setState","useEffect","setTimeout","then","useFetchImg","style","overflow","i","Img","ImgCad","src","Footer","ReactDOM","render","document","getElementById"],"mappings":"2NAAaA,EAAM,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAUH,GAF7C,+DAGSI,MAAMF,GAHf,cAGRG,EAHQ,gBAISA,EAASC,OAJlB,uBAINC,EAJM,EAINA,KAJM,kBAMPA,EAAKC,KAAI,SAAAC,GACZ,MAAM,CACFC,GAAID,EAAEC,GACNC,MAAOF,EAAEG,MACTC,IAAKJ,EAAEK,OAAOC,iBAAiBb,SAVzB,2CAAH,sD,OCGNc,EAAc,WACvB,OACE,qCACI,uCAIA,cAAC,EAAD,QAMJC,EAAQ,WAEd,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEQ,OACI,qCACI,cAAC,EAAD,CAAaC,cAAeD,IAC5B,uBACA,qBAAKE,UAAU,SAAf,SAGQH,EAAKX,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAASc,SAAUd,GAAQA,QAIjD,cAAC,EAAD,QAMVe,EAAe,SAAC,GAAoB,IAAnBH,EAAkB,EAAlBA,cAEnB,EAA0BH,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAeMC,EAAS,WACPD,EAAS,KAGjB,OACQ,sBAAME,SAdA,SAACC,GACXA,EAAEC,iBACCL,EAAMM,OAAOC,OAAS,IACrBX,GAAe,SAAAZ,GAAC,OAAMgB,GAAN,mBAAehB,OAC/BkB,MAUA,SACI,uBAAOM,KAAK,OAAOR,MAAOA,EAAOS,SAnB9B,SAACL,GACZH,EAASG,EAAEM,OAAOV,QAkByCW,YAAY,6BAOzEC,EAAS,SAAC,GAAgB,IAAfd,EAAc,EAAdA,SAGb,ECnEuB,SAACe,GAExB,MAA0BpB,mBAAS,CAC/BX,KAAM,GACNgC,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNC,YAAW,WACP5C,EAAOuC,GAAKM,MAAM,SAAAnC,GAAC,OAAIgC,EAAS,CAC5BlC,KAAME,EACN8B,SAAS,SAEd,OACJ,CAACD,IAEGE,EDmDiBK,CAAYtB,GAA7BhB,EAAP,EAAOA,KAAMgC,EAAb,EAAaA,QACb,OACI,qCACI,kDAAqBhB,KACrB,uBACA,qBAAKD,UAAU,OAAOwB,MAAO,CAACC,SAAU,UAAxC,SAEQR,EAAU,qBAAKjB,UAAU,wCAAf,sBAAwEf,EAAKC,KAAI,SAACC,EAAGuC,GAC3F,OAAO,cAAC,EAAD,CAAQ1B,UAAU,GAAG2B,IAAKxC,EAAEI,IAAKF,MAAOF,EAAEE,OAAYY,EAASyB,YAUxFE,EAAS,SAAC,GAAyB,IAAD,IAAvBD,WAAuB,MAAjB,GAAiB,MAAbtC,aAAa,MAAN,GAAM,EACpC,OACI,qBAAMW,UAAU,4CAAhB,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,KAAf,SACI,4BAAIX,MAER,qBAAKW,UAAU,OAAf,SACI,qBAAK6B,IAAKF,YASxBG,EAAS,WAEX,OACI,mCACI,uBACA,2CExGZC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.059b9766.chunk.js","sourcesContent":["export const getImg = async(NomCad) =>{    \r\n    \r\n    let url =  `https://api.giphy.com/v1/gifs/search?q=${encodeURI(NomCad)}&limit=10&api_key=FSagm3UuEgqfNk8F0b5nJfspkHqscdbO`;    \r\n        const rspuesta = await fetch(url);\r\n        const { data } = await rspuesta.json();\r\n    \r\n        return data.map(v=>{\r\n            return{\r\n                id: v.id,\r\n                Title: v.title,\r\n                Url: v.images.downsized_medium.url\r\n            }\r\n        });  \r\n    } ","import React, {useState, useEffect} from 'react';\r\nimport { useFetchImg } from './Hooks/useFetchImg';\r\n\r\nexport const GifExperApp = () =>{\r\n    return(\r\n      <>\r\n          <h1>\r\n            GifEx\r\n          </h1>\r\n        \r\n          <Lista/>\r\n          \r\n      </>\r\n    );\r\n}\r\n\r\nconst Lista = () =>{\r\n    \r\nconst [Cate, setCate] = useState([]);\r\n\r\n        return(\r\n            <>\r\n                <AddCategory setCategories={setCate}/>\r\n                <hr />\r\n                <div className=\"allcon\">\r\n                    \r\n                    {\r\n                        Cate.map(v => <Categry category={v} key={v}/>)\r\n                    }\r\n                    \r\n                </div>\r\n                <Footer/>\r\n            </> \r\n\r\n        );\r\n}\r\n\r\nconst AddCategory  = ({setCategories}) =>{\r\n    \r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const change = (e)=>{\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const onSub = (e)=>{\r\n        e.preventDefault();\r\n        if(value.trim().length > 0){\r\n            setCategories( v => [ value,...v,]);\r\n            resert();\r\n        }\r\n        \r\n    }\r\n\r\n    const resert = ()=>{\r\n            setValue(\"\");\r\n    }\r\n    \r\n    return(\r\n            <form onSubmit={onSub}>\r\n                <input type=\"text\" value={value} onChange={change} placeholder=\"Agregar una categoria\"/>\r\n            </form>\r\n    );\r\n    \r\n\r\n}\r\n\r\nconst Categry =({category}) => {\r\n\r\n    \r\n    const {data, loading} = useFetchImg(category);\r\n    return(\r\n        <>\r\n            <h2>Resultados para {category}</h2>\r\n            <hr/>\r\n            <div className=\"row \" style={{overflow: \"hidden\"}}>\r\n                {\r\n                    loading ? <div className=\"load animate__animated animate__flash\">loadding</div> : data.map((v ,i) => {\r\n                        return <ImgCad className=\"\" Img={v.Url} Title={v.Title} key={category+i}/>\r\n                        \r\n                    })  \r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ImgCad = ({Img = '', Title =''})=>{\r\n    return( \r\n        <div  className=\"Img animate__animated animate__fadeInDown\">\r\n            <div className=\"conten\">\r\n                <div className=\"pp\">\r\n                    <p>{Title}</p>\r\n                </div>\r\n                <div className=\"imgg\">\r\n                    <img src={Img}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\nconst Footer = () =>{\r\n\r\n    return(\r\n        <footer>\r\n            <hr/>\r\n            <p>My App</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\n\r\nconst Modal =  ({Img, setVisible: setVisibleModal = true}) =>{\r\n\r\n    const [Visible, setVisible] = useState(setVisibleModal);\r\n\r\n    const altern = () => {\r\n        setVisible(!Visible);\r\n    }\r\n\r\n    return <div onClick={altern} className=\"modal\" id=\"modal1\" style={Visible? {visibility: \"visible\"} : {visibility: \"hidden\"}}>\r\n        <div className=\"showImg\">\r\n            <img src={Img}/>\r\n        </div>\r\n    </div>;\r\n}","import {useEffect,useState} from 'react';\r\nimport { getImg } from '../helpers/GetImg';\r\n\r\nexport const useFetchImg = (nom)=>{\r\n\r\n    const [State, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            getImg(nom).then( v => setState({\r\n                data: v,\r\n                loading: false\r\n            }));\r\n        }, 3000);\r\n    }, [nom]);\r\n\r\n    return State;\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExperApp} from './compnents';\n\n\nReactDOM.render(\n  <GifExperApp />,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}